"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[9543],{3359:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(67294),r=n(67177),o=n(28033),i=n(10758),l=n(61693),s=n(35842),c=n(49638),d=n(42055);const u=120,m={code:"function anonymous(event){const{offset}=this._closure;offset.value+=event.changeX;}",location:"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/src/examples/DecayBasic.jsx"},p={code:"function anonymous(event){const{offset,withDecay,width,SIZE}=this._closure;offset.value=withDecay({velocity:event.velocityX,rubberBandEffect:true,clamp:[-(width.value/2)+SIZE/2,width.value/2-SIZE/2]});}",location:"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/src/examples/DecayBasic.jsx"},h={code:"function anonymous(){const{offset}=this._closure;return{transform:[{translateX:offset.value}]};}",location:"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/src/examples/DecayBasic.jsx"};function y(){const e=(0,i.y)(0),t=(0,i.y)(0),n=d.oF.Pan().onChange(function(){const t=function(t){e.value+=t.changeX};return t._closure={offset:e},t.__initData=m,t.__workletHash=0xcd3482120ca,t}()).onFinalize(function(){const n=function(n){e.value=(0,l.$)({velocity:n.velocityX,rubberBandEffect:!0,clamp:[-t.value/2+u/2,t.value/2-u/2]})};return n._closure={offset:e,withDecay:l.$,width:t,SIZE:u},n.__initData=p,n.__workletHash=5489370960414,n}()),o=(0,s.l)(function(){const t=()=>({transform:[{translateX:e.value}]});return t._closure={offset:e},t.__initData=h,t.__workletHash=3235417794450,t}());return a.createElement(d.cS,{style:f.container},a.createElement(r.Z,{onLayout:e=>{t.value=e.nativeEvent.layout.width},style:f.wrapper},a.createElement(d.Le,{gesture:n},a.createElement(c.Z,{style:[f.box,o]}))))}const f=o.Z.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},wrapper:{flex:1,width:"100%",alignItems:"center",justifyContent:"center"},box:{height:u,width:u,backgroundColor:"#b58df1",borderRadius:20,cursor:"grab",alignItems:"center",justifyContent:"center"}})},28935:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>R,default:()=>A,frontMatter:()=>C,metadata:()=>E,toc:()=>D});var a=n(83117),r=n(67294),o=n(3905),i=n(3359),l=n(96662),s=n(67177),c=n(28033),d=n(10758),u=n(61693),m=n(35842),p=n(49638),h=n(42055);const y=180,f={code:"function anonymous(event){const{offset}=this._closure;offset.value+=event.changeX;}",location:"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/src/examples/DecayTrain.jsx"},w={code:"function anonymous(event){const{offset,withDecay,width,SIZE}=this._closure;offset.value=withDecay({velocity:event.velocityX,rubberBandEffect:true,clamp:[-(width.value/2)+SIZE/2,width.value/2-SIZE/2]});}",location:"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/src/examples/DecayTrain.jsx"},g={code:"function anonymous(){const{offset}=this._closure;return{transform:[{translateX:offset.value}]};}",location:"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/src/examples/DecayTrain.jsx"};function k(){const e=(0,d.y)(0),t=(0,d.y)(0),n=h.oF.Pan().onChange(function(){const t=function(t){e.value+=t.changeX};return t._closure={offset:e},t.__initData=f,t.__workletHash=0xcd3482120ca,t}()).onFinalize(function(){const n=function(n){e.value=(0,u.$)({velocity:n.velocityX,rubberBandEffect:!0,clamp:[-t.value/2+y/2,t.value/2-y/2]})};return n._closure={offset:e,withDecay:u.$,width:t,SIZE:y},n.__initData=w,n.__workletHash=5489370960414,n}()),a=(0,m.l)(function(){const t=()=>({transform:[{translateX:e.value}]});return t._closure={offset:e},t.__initData=g,t.__workletHash=3235417794450,t}());return r.createElement(h.cS,{style:S.container},r.createElement(s.Z,{onLayout:e=>{t.value=e.nativeEvent.layout.width},style:S.wrapper},r.createElement(h.Le,{gesture:n},r.createElement(p.Z,{style:[S.grab,a]},r.createElement(v,null))),r.createElement(b,null)))}function b(){return r.createElement(s.Z,{style:{flexDirection:"column"}},r.createElement(s.Z,{style:S.rail}),r.createElement(s.Z,{style:{flexDirection:"row"}},Array.from({length:20}).map(((e,t)=>r.createElement(s.Z,{key:t,style:S.track})))))}function v(){return r.createElement(s.Z,{style:S.column},r.createElement(s.Z,{style:S.row},r.createElement(s.Z,{style:S.back}),r.createElement(s.Z,{style:S.chimney})),r.createElement(s.Z,{style:S.row},r.createElement(s.Z,{style:S.body}),r.createElement(s.Z,{style:S.front})),r.createElement(s.Z,{style:S.stripe}),r.createElement(s.Z,{style:S.underbody}),r.createElement(s.Z,{style:S.row},r.createElement(s.Z,{style:S.wheel}),r.createElement(s.Z,{style:S.wheel}),r.createElement(s.Z,{style:S.wheel})))}const S=c.Z.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},wrapper:{flex:1,width:"100%",alignItems:"center",justifyContent:"center"},grab:{cursor:"grab"},text:{color:"white",textTransform:"uppercase",fontWeight:"bold"},row:{flexDirection:"row"},column:{flexDirection:"column"},wheel:{height:50,width:50,backgroundColor:"#537FE7",borderRadius:50,marginHorizontal:5},underbody:{width:y,height:30,backgroundColor:"black",top:30},stripe:{width:y,height:10,backgroundColor:"red",top:30},front:{width:50,height:50,backgroundColor:"black",top:30},body:{width:130,height:50,backgroundColor:"#537FE7",top:30},chimney:{width:20,height:30,backgroundColor:"black",top:30,right:15,marginLeft:"auto"},back:{width:50,height:15,backgroundColor:"#537FE7",top:45},track:{height:10,width:20,backgroundColor:"#B8621B",marginHorizontal:15},rail:{width:"100%",height:10,backgroundColor:"gray"}}),x="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withDecay,\n} from 'react-native-reanimated';\nimport {\n  Gesture,\n  GestureDetector,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\n\nconst SIZE = 180;\n\nexport default function App() {\n  const offset = useSharedValue(0);\n  const width = useSharedValue(0);\n\n  const onLayout = (event) => {\n    width.value = event.nativeEvent.layout.width;\n  };\n\n  const pan = Gesture.Pan()\n    .onChange((event) => {\n      offset.value += event.changeX;\n    })\n    .onFinalize((event) => {\n      offset.value = withDecay({\n        velocity: event.velocityX,\n        rubberBandEffect: true,\n        clamp: [-(width.value / 2) + SIZE / 2, width.value / 2 - SIZE / 2],\n      });\n    });\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    transform: [{ translateX: offset.value }],\n  }));\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <View onLayout={onLayout} style={styles.wrapper}>\n        <GestureDetector gesture={pan}>\n          <Animated.View style={[styles.grab, animatedStyles]}>\n            <Train />\n          </Animated.View>\n        </GestureDetector>\n        <TrainTracks />\n      </View>\n    </GestureHandlerRootView>\n  );\n}\n\nfunction TrainTracks() {\n  return (\n    <View style={{ flexDirection: 'column' }}>\n      <View style={styles.rail} />\n      <View style={{ flexDirection: 'row' }}>\n        {Array.from({ length: 20 }).map((_, i) => {\n          return <View key={i} style={styles.track} />;\n        })}\n      </View>\n    </View>\n  );\n}\n\nfunction Train() {\n  return (\n    <View style={styles.column}>\n      <View style={styles.row}>\n        <View style={styles.back} />\n        <View style={styles.chimney} />\n      </View>\n      <View style={styles.row}>\n        <View style={styles.body} />\n        <View style={styles.front} />\n      </View>\n      <View style={styles.stripe} />\n      <View style={styles.underbody} />\n      <View style={styles.row}>\n        <View style={styles.wheel} />\n        <View style={styles.wheel} />\n        <View style={styles.wheel} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  wrapper: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  grab: {\n    cursor: 'grab',\n  },\n  text: {\n    color: 'white',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  wheel: {\n    height: 50,\n    width: 50,\n    backgroundColor: '#537FE7',\n    borderRadius: 50,\n    marginHorizontal: 5,\n  },\n  underbody: {\n    width: SIZE,\n    height: 30,\n    backgroundColor: 'black',\n    top: 30,\n  },\n  stripe: {\n    width: SIZE,\n    height: 10,\n    backgroundColor: 'red',\n    top: 30,\n  },\n  front: {\n    width: 50,\n    height: 50,\n    backgroundColor: 'black',\n    top: 30,\n  },\n  body: {\n    width: 130,\n    height: 50,\n    backgroundColor: '#537FE7',\n    top: 30,\n  },\n  chimney: {\n    width: 20,\n    height: 30,\n    backgroundColor: 'black',\n    top: 30,\n    right: 15,\n    marginLeft: 'auto',\n  },\n  back: {\n    width: 50,\n    height: 15,\n    backgroundColor: '#537FE7',\n    top: 30 + 15,\n  },\n  track: {\n    height: 10,\n    width: 20,\n    backgroundColor: '#B8621B',\n    marginHorizontal: 15,\n  },\n  rail: {\n    width: '100%',\n    height: 10,\n    backgroundColor: 'gray',\n  },\n});\n",C={sidebar_position:3},R="withDecay",E={unversionedId:"animations/withDecay",id:"animations/withDecay",title:"withDecay",description:"withDecay lets you create animations that mimic objects in motion. The animation will start with the provided velocity and slow down over time according to the given deceleration rate until it stops.",source:"@site/docs/animations/withDecay.mdx",sourceDirName:"animations",slug:"/animations/withDecay",permalink:"/react-native-reanimated/docs/animations/withDecay",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/animations/withDecay.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"withSpring",permalink:"/react-native-reanimated/docs/animations/withSpring"},next:{title:"withSequence",permalink:"/react-native-reanimated/docs/animations/withSequence"}},N={},D=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>config</code>",id:"config",level:4},{value:"<code>callback</code> <Optional />",id:"callback-",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],Z=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},_=Z("InteractiveExample"),V=Z("Optional"),T={toc:D},I="wrapper";function A(e){let{components:t,...n}=e;return(0,o.kt)(I,(0,a.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"withdecay"},"withDecay"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"withDecay")," lets you create animations that mimic objects in motion. The animation will start with the provided velocity and slow down over time according to the given deceleration rate until it stops."),(0,o.kt)(_,{src:l.Z,component:(0,o.kt)(i.Z,{mdxType:"DecayBasic"}),label:"Grab and drag the square",mdxType:"InteractiveExample"}),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { withDecay } from 'react-native-reanimated';\n\nfunction App() {\n  sv.value = withDecay({ velocity: 1 });\n  // ...\n}\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Type definitions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type AnimatableValue = number | string | number[];\n\ninterface WithDecayConfig {\n  deceleration?: number;\n  velocity?: number;\n  clamp?: [number, number];\n  velocityFactor?: number;\n  rubberBandEffect?: boolean;\n  rubberBandFactor?: number;\n}\n\nfunction withDecay(\n  userConfig: WithDecayConfig,\n  callback?: (finished?: boolean, current?: AnimatableValue) => void\n): number;\n"))),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"config"},(0,o.kt)("inlineCode",{parentName:"h4"},"config")),(0,o.kt)("p",null,"The decay animation configuration."),(0,o.kt)("p",null,"Available properties:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"velocity ",(0,o.kt)(V,{mdxType:"Optional"})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number")),(0,o.kt)("td",{parentName:"tr",align:null},"0"),(0,o.kt)("td",{parentName:"tr",align:null},"Initial velocity of the animation.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"deceleration ",(0,o.kt)(V,{mdxType:"Optional"})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number")),(0,o.kt)("td",{parentName:"tr",align:null},"0.998"),(0,o.kt)("td",{parentName:"tr",align:null},"The rate at which the velocity decreases over time.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"clamp ",(0,o.kt)(V,{mdxType:"Optional"})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[number, number]")),(0,o.kt)("td",{parentName:"tr",align:null},"[]"),(0,o.kt)("td",{parentName:"tr",align:null},"Array of two numbers which restricts animation's range. Animation stops when either bound is reached unless the ",(0,o.kt)("inlineCode",{parentName:"td"},"rubberBandEffect")," option is set to ",(0,o.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"velocityFactor ",(0,o.kt)(V,{mdxType:"Optional"})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number")),(0,o.kt)("td",{parentName:"tr",align:null},"1"),(0,o.kt)("td",{parentName:"tr",align:null},"Velocity multiplier.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"rubberBandEffect ",(0,o.kt)(V,{mdxType:"Optional"})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean")),(0,o.kt)("td",{parentName:"tr",align:null},"false"),(0,o.kt)("td",{parentName:"tr",align:null},"Makes the animation bounce over the limit specified in ",(0,o.kt)("inlineCode",{parentName:"td"},"clamp"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"rubberBandFactor ",(0,o.kt)(V,{mdxType:"Optional"})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number")),(0,o.kt)("td",{parentName:"tr",align:null},"0.6"),(0,o.kt)("td",{parentName:"tr",align:null},"Strength of the rubber band effect.")))),(0,o.kt)("h4",{id:"callback-"},(0,o.kt)("inlineCode",{parentName:"h4"},"callback")," ",(0,o.kt)(V,{mdxType:"Optional"})),(0,o.kt)("p",null,"A function called on animation complete. In case the animation is cancelled, the callback will receive ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," as the argument, otherwise it will receive ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"withDecay")," returns an ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animation-object"},"animation object"),". It can be either assigned directly to a ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared value")," or can be used as a value for a style object returned from ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/useAnimatedStyle"},"useAnimatedStyle"),"."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(_,{src:x,component:(0,o.kt)(k,{mdxType:"DecayTrain"}),label:"Grab and drag the train",mdxType:"InteractiveExample"}),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The callback passed to the 2nd argument is automatically ",(0,o.kt)("a",{parentName:"li",href:"/docs/fundamentals/glossary#to-workletize"},"workletized")," and ran on the ",(0,o.kt)("a",{parentName:"li",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),".")),(0,o.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,o.kt)("div",{className:"compatibility"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Android"),(0,o.kt)("th",{parentName:"tr",align:null},"iOS"),(0,o.kt)("th",{parentName:"tr",align:null},"Web"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"))))))}A.isMDXComponent=!0},96662:(e,t,n)=>{n.d(t,{Z:()=>a});const a="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withDecay,\n} from 'react-native-reanimated';\nimport {\n  Gesture,\n  GestureDetector,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\n\nconst SIZE = 120;\n\nexport default function App() {\n  const offset = useSharedValue(0);\n  const width = useSharedValue(0);\n\n  const onLayout = (event) => {\n    width.value = event.nativeEvent.layout.width;\n  };\n\n  const pan = Gesture.Pan()\n    .onChange((event) => {\n      // highlight-next-line\n      offset.value += event.changeX;\n    })\n    .onFinalize((event) => {\n      // highlight-start\n      offset.value = withDecay({\n        velocity: event.velocityX,\n        rubberBandEffect: true,\n        clamp: [-(width.value / 2) + SIZE / 2, width.value / 2 - SIZE / 2],\n      });\n      // highlight-end\n    });\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    transform: [{ translateX: offset.value }],\n  }));\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <View onLayout={onLayout} style={styles.wrapper}>\n        <GestureDetector gesture={pan}>\n          <Animated.View style={[styles.box, animatedStyles]} />\n        </GestureDetector>\n      </View>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  wrapper: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  box: {\n    height: SIZE,\n    width: SIZE,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    cursor: 'grab',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"},24404:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(3058),r=n(80102),o=n(67294),i=n(37353),l=n(13250),s=n(45819),c=n(30042),d=n(16528),u=n(60091),m=n(72359),p=n(28033),h=n(84370),y=n(72931),f=["hrefAttrs","numberOfLines","onClick","onLayout","onPress","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","selectable"],w=Object.assign({},l.lG,l.LO,l._T,l.YB,l.Uy,l.hJ,l.E5,l.vr,{href:!0,lang:!0,pointerEvents:!0}),g=o.forwardRef(((e,t)=>{var n=e.hrefAttrs,a=e.numberOfLines,l=e.onClick,p=e.onLayout,g=e.onPress,k=e.onMoveShouldSetResponder,v=e.onMoveShouldSetResponderCapture,S=e.onResponderEnd,x=e.onResponderGrant,C=e.onResponderMove,R=e.onResponderReject,E=e.onResponderRelease,N=e.onResponderStart,D=e.onResponderTerminate,Z=e.onResponderTerminationRequest,_=e.onScrollShouldSetResponder,V=e.onScrollShouldSetResponderCapture,T=e.onSelectionChangeShouldSetResponder,I=e.onSelectionChangeShouldSetResponderCapture,A=e.onStartShouldSetResponder,j=e.onStartShouldSetResponderCapture,L=e.selectable,G=(0,r.Z)(e,f),B=o.useContext(h.Z),X=o.useRef(null),O=(0,y.PE)().direction;(0,c.Z)(X,p),(0,m.Z)(X,{onMoveShouldSetResponder:k,onMoveShouldSetResponderCapture:v,onResponderEnd:S,onResponderGrant:x,onResponderMove:C,onResponderReject:R,onResponderRelease:E,onResponderStart:N,onResponderTerminate:D,onResponderTerminationRequest:Z,onScrollShouldSetResponder:_,onScrollShouldSetResponderCapture:V,onSelectionChangeShouldSetResponder:T,onSelectionChangeShouldSetResponderCapture:I,onStartShouldSetResponder:A,onStartShouldSetResponderCapture:j});var H=o.useCallback((e=>{null!=l?l(e):null!=g&&(e.stopPropagation(),g(e))}),[l,g]),M=B?"span":"div",F=null!=e.lang?(0,y.w1)(e.lang):null,P=e.dir||F,z=P||O,W=(e=>(0,s.Z)(e,w))(G);if(W.dir=P,B||(W.dir=null!=P?P:"auto"),(l||g)&&(W.onClick=H),W.style=[null!=a&&a>1&&{WebkitLineClamp:a},!0===B?b.textHasAncestor$raw:b.text$raw,1===a&&b.textOneLine,null!=a&&a>1&&b.textMultiLine,e.style,!0===L&&b.selectable,!1===L&&b.notSelectable,g&&b.pressable],null!=e.href&&(M="a",null!=n)){var $=n.download,q=n.rel,U=n.target;null!=$&&(W.download=$),null!=q&&(W.rel=q),"string"==typeof U&&(W.target="_"!==U.charAt(0)?"_"+U:U)}var J=(0,u.Z)(W),Y=(0,d.Z)(X,J,t);W.ref=Y;var K=(0,i.Z)(M,W,{writingDirection:z});return B?K:o.createElement(h.Z.Provider,{value:!0},K)}));g.displayName="Text";var k={backgroundColor:"transparent",border:"0 solid black",boxSizing:"border-box",color:"black",display:"inline",font:"14px System",listStyle:"none",margin:0,padding:0,textAlign:"inherit",textDecoration:"none",whiteSpace:"pre-wrap",wordWrap:"break-word"},b=p.Z.create({text$raw:k,textHasAncestor$raw:(0,a.Z)((0,a.Z)({},k),{},{color:"inherit",font:"inherit",whiteSpace:"inherit"}),textOneLine:{maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap",wordWrap:"normal"},textMultiLine:{display:"-webkit-box",maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",WebkitBoxOrient:"vertical"},notSelectable:{userSelect:"none"},selectable:{userSelect:"text"},pressable:{cursor:"pointer"}});const v=g}}]);