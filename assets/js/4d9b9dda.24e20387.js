"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[5129],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),m=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(c.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),l=m(n),u=r,f=l["".concat(c,".").concat(u)]||l[u]||p[u]||o;return n?a.createElement(f,i(i({ref:t},s),{},{components:n})):a.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d[l]="string"==typeof e?e:r,i[1]=d;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},63446:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>m});var a=n(83117),r=(n(67294),n(3905));const o={},i="dispatchCommand",d={unversionedId:"advanced/dispatchCommand",id:"advanced/dispatchCommand",title:"dispatchCommand",description:"This page was ported from an old version of the documentation.",source:"@site/docs/advanced/dispatchCommand.mdx",sourceDirName:"advanced",slug:"/advanced/dispatchCommand",permalink:"/react-native-reanimated/docs/advanced/dispatchCommand",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/advanced/dispatchCommand.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useHandler",permalink:"/react-native-reanimated/docs/advanced/useHandler"},next:{title:"Guides",permalink:"/react-native-reanimated/docs/category/guides"}},c={},m=[{value:"Arguments",id:"arguments",level:3},{value:"<code>animatedRef</code>",id:"animatedref",level:4},{value:"<code>commandName</code> String",id:"commandname-string",level:4},{value:"<code>args</code> Array<any>",id:"args-arrayany",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}],s={toc:m},l="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dispatchcommand"},"dispatchCommand"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This page was ported from an old version of the documentation."),(0,r.kt)("p",{parentName:"admonition"},"As we're rewriting the documentation some of the pages might be a little outdated.")),(0,r.kt)("p",null,"Allows to dispatch command on a native component synchronously from the UI thread."),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"animatedref"},(0,r.kt)("inlineCode",{parentName:"h4"},"animatedRef")),(0,r.kt)("p",null,"The product of ",(0,r.kt)("a",{parentName:"p",href:"/docs/core/useAnimatedRef"},(0,r.kt)("inlineCode",{parentName:"a"},"useAnimatedRef"))," which is Reanimated's extension of a standard React ref (delivers the view tag on the UI thread)."),(0,r.kt)("h4",{id:"commandname-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"commandName")," ","[String]"),(0,r.kt)("p",null,"The name of the command to execute, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"focus")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"scrollToEnd"),"."),(0,r.kt)("h4",{id:"args-arrayany"},(0,r.kt)("inlineCode",{parentName:"h4"},"args")," ","[Array<any",">]"),(0,r.kt)("p",null,"The array of command arguments. Defaults to an empty array."),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import Animated, {\n  dispatchCommand,\n  useAnimatedRef,\n} from 'react-native-reanimated';\nimport { Button, StyleSheet, TextInput, View } from 'react-native';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\n\nimport React from 'react';\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nexport default function DispatchCommandExample() {\n  const aref = useAnimatedRef<TextInput>();\n\n  const gesture = Gesture.Tap().onStart(() => {\n    dispatchCommand(aref, 'focus');\n  });\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput ref={aref} style={styles.input} />\n      <GestureDetector gesture={gesture}>\n        <Button title=\"Focus\" />\n      </GestureDetector>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    width: 200,\n    padding: 5,\n  },\n});\n")))}p.isMDXComponent=!0}}]);