"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"3.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Fundamentals","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Getting started","href":"/react-native-reanimated/docs/fundamentals/getting-started","docId":"fundamentals/getting-started"},{"type":"link","label":"Your First Animation","href":"/react-native-reanimated/docs/fundamentals/your-first-animation","docId":"fundamentals/your-first-animation"},{"type":"link","label":"Animating styles and props","href":"/react-native-reanimated/docs/fundamentals/animating-styles-and-props","docId":"fundamentals/animating-styles-and-props"},{"type":"link","label":"Customizing animations","href":"/react-native-reanimated/docs/fundamentals/customizing-animation","docId":"fundamentals/customizing-animation"},{"type":"link","label":"Applying modifiers","href":"/react-native-reanimated/docs/fundamentals/applying-modifiers","docId":"fundamentals/applying-modifiers"},{"type":"link","label":"Handling gestures","href":"/react-native-reanimated/docs/fundamentals/handling-gestures","docId":"fundamentals/handling-gestures"},{"type":"link","label":"Glossary of terms","href":"/react-native-reanimated/docs/fundamentals/glossary","docId":"fundamentals/glossary"}],"href":"/react-native-reanimated/docs/category/fundamentals"},{"type":"category","label":"Animations","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"withTiming","href":"/react-native-reanimated/docs/animations/withTiming","docId":"animations/withTiming"},{"type":"link","label":"withSpring","href":"/react-native-reanimated/docs/animations/withSpring","docId":"animations/withSpring"},{"type":"link","label":"withDecay","href":"/react-native-reanimated/docs/animations/withDecay","docId":"animations/withDecay"},{"type":"link","label":"withSequence","href":"/react-native-reanimated/docs/animations/withSequence","docId":"animations/withSequence"},{"type":"link","label":"withRepeat","href":"/react-native-reanimated/docs/animations/withRepeat","docId":"animations/withRepeat"},{"type":"link","label":"withDelay","href":"/react-native-reanimated/docs/animations/withDelay","docId":"animations/withDelay"}],"href":"/react-native-reanimated/docs/category/animations"},{"type":"category","label":"Core","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"useSharedValue","href":"/react-native-reanimated/docs/core/useSharedValue","docId":"core/useSharedValue"},{"type":"link","label":"useAnimatedStyle","href":"/react-native-reanimated/docs/core/useAnimatedStyle","docId":"core/useAnimatedStyle"},{"type":"link","label":"useAnimatedProps","href":"/react-native-reanimated/docs/core/useAnimatedProps","docId":"core/useAnimatedProps"},{"type":"link","label":"useAnimatedRef","href":"/react-native-reanimated/docs/core/useAnimatedRef","docId":"core/useAnimatedRef"},{"type":"link","label":"useDerivedValue","href":"/react-native-reanimated/docs/core/useDerivedValue","docId":"core/useDerivedValue"},{"type":"link","label":"createAnimatedComponent","href":"/react-native-reanimated/docs/core/createAnimatedComponent","docId":"core/createAnimatedComponent"},{"type":"link","label":"cancelAnimation","href":"/react-native-reanimated/docs/core/cancelAnimation","docId":"core/cancelAnimation"}],"href":"/react-native-reanimated/docs/category/core"},{"type":"category","label":"Scroll","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"scrollTo","href":"/react-native-reanimated/docs/scroll/scrollTo","docId":"scroll/scrollTo"},{"type":"link","label":"useScrollViewOffset","href":"/react-native-reanimated/docs/scroll/useScrollViewOffset","docId":"scroll/useScrollViewOffset"},{"type":"link","label":"useAnimatedScrollHandler","href":"/react-native-reanimated/docs/scroll/useAnimatedScrollHandler","docId":"scroll/useAnimatedScrollHandler"}],"href":"/react-native-reanimated/docs/category/scroll"},{"type":"category","label":"Device","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"useAnimatedKeyboard","href":"/react-native-reanimated/docs/device/useAnimatedKeyboard","docId":"device/useAnimatedKeyboard"},{"type":"link","label":"useAnimatedSensor","href":"/react-native-reanimated/docs/device/useAnimatedSensor","docId":"device/useAnimatedSensor"}],"href":"/react-native-reanimated/docs/category/device"},{"type":"category","label":"Layout Animations","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Entering/Exiting animations","href":"/react-native-reanimated/docs/layout-animations/entering-exiting-animations","docId":"layout-animations/entering-exiting-animations"},{"type":"link","label":"Keyframe animations","href":"/react-native-reanimated/docs/layout-animations/keyframe-animations","docId":"layout-animations/keyframe-animations"},{"type":"link","label":"Layout transitions","href":"/react-native-reanimated/docs/layout-animations/layout-transitions","docId":"layout-animations/layout-transitions"},{"type":"link","label":"Custom animations","href":"/react-native-reanimated/docs/layout-animations/custom-animations","docId":"layout-animations/custom-animations"}],"href":"/react-native-reanimated/docs/category/layout-animations"},{"type":"category","label":"Shared Element Transitions","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Overview","href":"/react-native-reanimated/docs/shared-element-transitions/overview","docId":"shared-element-transitions/overview"}],"href":"/react-native-reanimated/docs/category/shared-element-transitions"},{"type":"category","label":"Threading","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"runOnJS","href":"/react-native-reanimated/docs/threading/runOnJS","docId":"threading/runOnJS"},{"type":"link","label":"runOnUI","href":"/react-native-reanimated/docs/threading/runOnUI","docId":"threading/runOnUI"}],"href":"/react-native-reanimated/docs/category/threading"},{"type":"category","label":"Utilities","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"interpolate","href":"/react-native-reanimated/docs/utilities/interpolate","docId":"utilities/interpolate"},{"type":"link","label":"interpolateColor","href":"/react-native-reanimated/docs/utilities/interpolateColor","docId":"utilities/interpolateColor"},{"type":"link","label":"getRelativeCoords","href":"/react-native-reanimated/docs/utilities/getRelativeCoords","docId":"utilities/getRelativeCoords"}],"href":"/react-native-reanimated/docs/category/utilities"},{"type":"category","label":"Advanced APIs","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"measure","href":"/react-native-reanimated/docs/advanced/measure","docId":"advanced/measure"},{"type":"link","label":"useAnimatedReaction","href":"/react-native-reanimated/docs/advanced/useAnimatedReaction","docId":"advanced/useAnimatedReaction"},{"type":"link","label":"useFrameCallback","href":"/react-native-reanimated/docs/advanced/useFrameCallback","docId":"advanced/useFrameCallback"},{"type":"link","label":"useEvent","href":"/react-native-reanimated/docs/advanced/useEvent","docId":"advanced/useEvent"},{"type":"link","label":"useHandler","href":"/react-native-reanimated/docs/advanced/useHandler","docId":"advanced/useHandler"},{"type":"link","label":"dispatchCommand","href":"/react-native-reanimated/docs/advanced/dispatchCommand","docId":"advanced/dispatchCommand"}],"href":"/react-native-reanimated/docs/category/advanced-apis"},{"type":"category","label":"Guides","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Debugging worklets","href":"/react-native-reanimated/docs/guides/debugging","docId":"guides/debugging"},{"type":"link","label":"Migration from 1.x","href":"/react-native-reanimated/docs/guides/migration-from-1.x","docId":"guides/migration-from-1.x"},{"type":"link","label":"Migration from 2.x","href":"/react-native-reanimated/docs/guides/migration-from-2.x","docId":"guides/migration-from-2.x"},{"type":"link","label":"Testing with Jest","href":"/react-native-reanimated/docs/guides/testing","docId":"guides/testing"},{"type":"link","label":"Web Support","href":"/react-native-reanimated/docs/guides/web-support","docId":"guides/web-support"}],"href":"/react-native-reanimated/docs/category/guides"}]},"docs":{"advanced/dispatchCommand":{"id":"advanced/dispatchCommand","title":"dispatchCommand","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"advanced/measure":{"id":"advanced/measure","title":"measure","description":"measure lets you synchronously get the dimensions and position of a view on the screen, all on the UI thread.","sidebar":"tutorialSidebar"},"advanced/useAnimatedReaction":{"id":"advanced/useAnimatedReaction","title":"useAnimatedReaction","description":"useAnimatedReaction allows you to respond to changes in a shared value. It\'s especially useful when comparing values previously stored in the shared value with the current one.","sidebar":"tutorialSidebar"},"advanced/useEvent":{"id":"advanced/useEvent","title":"useEvent","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"advanced/useFrameCallback":{"id":"advanced/useFrameCallback","title":"useFrameCallback","description":"useFrameCallback lets you run a function on every frame update.","sidebar":"tutorialSidebar"},"advanced/useHandler":{"id":"advanced/useHandler","title":"useHandler","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"animations/withDecay":{"id":"animations/withDecay","title":"withDecay","description":"withDecay lets you create animations that mimic objects in motion. The animation will start with the provided velocity and slow down over time according to the given deceleration rate until it stops.","sidebar":"tutorialSidebar"},"animations/withDelay":{"id":"animations/withDelay","title":"withDelay","description":"withDelay is an animation modifier that lets you start an animation with a delay.","sidebar":"tutorialSidebar"},"animations/withRepeat":{"id":"animations/withRepeat","title":"withRepeat","description":"withRepeat is an animation modifier that lets you repeat an animation given number of times or run it indefinitely.","sidebar":"tutorialSidebar"},"animations/withSequence":{"id":"animations/withSequence","title":"withSequence","description":"withSequence is an animation modifier that lets you run animations in a sequence.","sidebar":"tutorialSidebar"},"animations/withSpring":{"id":"animations/withSpring","title":"withSpring","description":"withSpring lets you create spring-based animations.","sidebar":"tutorialSidebar"},"animations/withTiming":{"id":"animations/withTiming","title":"withTiming","description":"withTiming lets you create an animation based on duration and easing.","sidebar":"tutorialSidebar"},"core/cancelAnimation":{"id":"core/cancelAnimation","title":"cancelAnimation","description":"cancelAnimation lets you cancel a running animation paired to a shared value.","sidebar":"tutorialSidebar"},"core/createAnimatedComponent":{"id":"core/createAnimatedComponent","title":"createAnimatedComponent","description":"createAnimatedComponent lets you create an Animated version of any React Native component. Wrapping a component with createAnimatedComponent allows Reanimated to animate any prop or style associated with that component.","sidebar":"tutorialSidebar"},"core/useAnimatedProps":{"id":"core/useAnimatedProps","title":"useAnimatedProps","description":"useAnimatedStyle lets you create an animated props object which can be animated using shared values. This object is used to animate properties of third-party components.","sidebar":"tutorialSidebar"},"core/useAnimatedRef":{"id":"core/useAnimatedRef","title":"useAnimatedRef","description":"useAnimatedRef lets you get a reference of a view. Used alongside measure, scrollTo, and useScrollViewOffset functions.","sidebar":"tutorialSidebar"},"core/useAnimatedStyle":{"id":"core/useAnimatedStyle","title":"useAnimatedStyle","description":"useAnimatedStyle lets you create a styles object, similar to StyleSheet styles, which can be animated using shared values.","sidebar":"tutorialSidebar"},"core/useDerivedValue":{"id":"core/useDerivedValue","title":"useDerivedValue","description":"useDerivedValue lets you create new shared values based on existing ones while keeping them reactive.","sidebar":"tutorialSidebar"},"core/useSharedValue":{"id":"core/useSharedValue","title":"useSharedValue","description":"useSharedValue lets you define shared values in your components.","sidebar":"tutorialSidebar"},"device/useAnimatedKeyboard":{"id":"device/useAnimatedKeyboard","title":"useAnimatedKeyboard","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"device/useAnimatedSensor":{"id":"device/useAnimatedSensor","title":"useAnimatedSensor","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"fundamentals/animating-styles-and-props":{"id":"fundamentals/animating-styles-and-props","title":"Animating styles and props","description":"In the last section, we learned how to make simple animations, what shared values are and how to use them. Now, we\'ll learn a different way of passing animation styles to components. We\'ll also go over the difference between animating styles and props and how to handle them using useAnimatedStyle and useAnimatedProps.","sidebar":"tutorialSidebar"},"fundamentals/applying-modifiers":{"id":"fundamentals/applying-modifiers","title":"Applying modifiers","description":"Another way of customizing animations in Reanimated is by using animation modifiers. Reanimated comes with three built-in modifiers: withRepeat, withSequence, and withDelay.","sidebar":"tutorialSidebar"},"fundamentals/customizing-animation":{"id":"fundamentals/customizing-animation","title":"Customizing animations","description":"Previous section not only taught you how to use shared values in practice but also you used withSpring and withTiming functions to create animations. We think now you\'re more than ready to dive deeper into customizing animations!","sidebar":"tutorialSidebar"},"fundamentals/getting-started":{"id":"fundamentals/getting-started","title":"Getting started","description":"The Fundamentals section was designed to help you gain a strong foundation on the core concepts of Reanimated and give you the confidence to explore more advanced use cases on your own. This section is packed with interactive examples, code snippets and explanations. Are you ready? Let\'s dive in!","sidebar":"tutorialSidebar"},"fundamentals/glossary":{"id":"fundamentals/glossary","title":"Glossary of terms","description":"Animated component","sidebar":"tutorialSidebar"},"fundamentals/handling-gestures":{"id":"fundamentals/handling-gestures","title":"Handling gestures","description":"In this section, we\'ll learn how to handle gestures with Reanimated. To achieve this, Reanimated integrates tightly with React Native Gesture Handler, another library created by Software Mansion.","sidebar":"tutorialSidebar"},"fundamentals/your-first-animation":{"id":"fundamentals/your-first-animation","title":"Your First Animation","description":"In this section, we\'ll guide you through the basic concepts of Reanimated. If you\'re new to Reanimated, you\'re in the right hands! We\'re going to start by building a simple animation which will help you develop a basic understanding of the library. Then, in the following sections, we\'re going to build on top of this knowledge and further expand your skills. Let\'s go!","sidebar":"tutorialSidebar"},"guides/debugging":{"id":"guides/debugging","title":"Debugging worklets","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"guides/migration-from-1.x":{"id":"guides/migration-from-1.x","title":"Migrating from Reanimated 1.x to 2.x","description":"We wanted to make it possible to migrate from Reanimated 1 to Reanimated 2 incrementally.","sidebar":"tutorialSidebar"},"guides/migration-from-2.x":{"id":"guides/migration-from-2.x","title":"Migrating from Reanimated 2.x to 3.x","description":"Reanimated 3.x doesn\'t introduce any breaking changes between 2.x and 3.x in terms of the API. All the code you\'ve written in Reanimated v2 API works in 3.x without any changes. However, Reanimated 3.x drops the Reanimated v1 API entirely. For the migration guide between 1.x and 2.x versions please consult Migration from 1.x to 2.x.","sidebar":"tutorialSidebar"},"guides/testing":{"id":"guides/testing","title":"Testing with Jest","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"guides/web-support":{"id":"guides/web-support","title":"Web Support","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"layout-animations/custom-animations":{"id":"layout-animations/custom-animations","title":"Custom animations","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"layout-animations/entering-exiting-animations":{"id":"layout-animations/entering-exiting-animations","title":"Entering/Exiting animations","description":"Entering/Exiting animations let you animate elements when they are added to or removed from the view hierarchy.","sidebar":"tutorialSidebar"},"layout-animations/keyframe-animations":{"id":"layout-animations/keyframe-animations","title":"Keyframe animations","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"layout-animations/layout-transitions":{"id":"layout-animations/layout-transitions","title":"Layout transitions","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"scroll/scrollTo":{"id":"scroll/scrollTo","title":"scrollTo","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"scroll/useAnimatedScrollHandler":{"id":"scroll/useAnimatedScrollHandler","title":"useAnimatedScrollHandler","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"scroll/useScrollViewOffset":{"id":"scroll/useScrollViewOffset","title":"useScrollViewOffset","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"shared-element-transitions/overview":{"id":"shared-element-transitions/overview","title":"Shared Element Transitions","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"threading/runOnJS":{"id":"threading/runOnJS","title":"runOnJS","description":"runOnJS lets you asynchronously run non-workletized functions that couldn\'t otherwise run on the UI thread. This applies to most external libraries as they don\'t have their functions marked with \\"worklet\\"; directive.","sidebar":"tutorialSidebar"},"threading/runOnUI":{"id":"threading/runOnUI","title":"runOnUI","description":"runOnUI lets you asynchronously run workletized functions on the UI thread.","sidebar":"tutorialSidebar"},"utilities/getRelativeCoords":{"id":"utilities/getRelativeCoords","title":"getRelativeCoords","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"utilities/interpolate":{"id":"utilities/interpolate","title":"interpolate","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"},"utilities/interpolateColor":{"id":"utilities/interpolateColor","title":"interpolateColor","description":"This page was ported from an old version of the documentation.","sidebar":"tutorialSidebar"}}}')}}]);